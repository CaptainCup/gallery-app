{"version":3,"sources":["components/nav.js","components/picture.js","components/pagination.js","components/gallery.js","components/gallery-favorite.js","components/gallery-deleted.js","components/filters.js","components/picture-info.js","components/fullscreen-picture.js","components/tutorial.js","components/main-screen.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","wrappedNavIcon","React","useState","wrapped","setWrapped","unWrap","wrappedNavIconStyle","tutorial","animation","window","location","pathname","style","width","height","viewBox","className","fill","xmlns","onClick","fillRule","d","to","exact","role","aria-label","type","setGalleryColumns","Picture","favoriteIco","picture","favorite","addProperty","id","deletedIco","deleted","classes","filters","filter","blur","grayscale","sepia","brightness","contrast","saturate","hue","invert","author","showFullPicture","src","download_url","alt","Pagination","pages","page","href","changePage","Gallery","Fragment","breakpointCols","galleryColumns","columnClassName","pictures","map","item","key","GalleryFavorite","length","GalleryDeleted","Filters","openFilters","PictureInfo","rel","target","FullscreenPicture","filtersOpen","setFiltersOpen","showingComponent","TutorialBanner","setTutorial","storedGalleryStart","localStorage","getItem","JSON","parse","startTutorial","startColumns","MainScreen","setPictures","storedGallery","setStoredGallery","fullscreen","setFullscreen","setPage","toPage","prop","find","newItem","push","useEffect","fetch","then","response","json","storedItem","setItem","stringify","path","component","Number","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0aebfe87.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Nav(props) {\r\n    // Состояние, отображающее свернут ли компонент Nav\r\n    let [wrapped, setWrapped] = React.useState(true);\r\n\r\n    // Функция-обертка для смены состояния wrapped\r\n    function unWrap() {\r\n        setWrapped(!wrapped);\r\n    }\r\n\r\n    // Данная переменная необходима для того, чтобы при обучении пользователя иконка Nav пульсировала и привлекала к себе внимание\r\n    let wrappedNavIcon;\r\n    let wrappedNavIconStyle = !props.tutorial ? {animation: 'toBigRepeat 1s linear infinite'} : null;\r\n\r\n    // В зависимости от текущей вкладки иконка Nav меняется на соответствующую даннной вкладке    \r\n    switch (window.location.pathname) {\r\n        case '/': {\r\n            wrappedNavIcon = (\r\n                <svg style={wrappedNavIconStyle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className={\"nav-icon bi bi-image\"} fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={unWrap}>\r\n                    <path fillRule=\"evenodd\" d=\"M14.002 2h-12a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12z\"/>\r\n                    <path d=\"M10.648 7.646a.5.5 0 0 1 .577-.093L15.002 9.5V14h-14v-2l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71z\"/>\r\n                    <path fillRule=\"evenodd\" d=\"M4.502 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                </svg>\r\n            )\r\n            break;\r\n        }\r\n        case '/favorites': {\r\n            wrappedNavIcon = (\r\n                <svg style={wrappedNavIconStyle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"nav-icon bi bi-heart-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={unWrap}>\r\n                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n                </svg>\r\n            )\r\n            break;\r\n        }\r\n        case '/deleted': {\r\n            wrappedNavIcon = (\r\n                <svg style={wrappedNavIconStyle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"nav-icon bi bi-trash-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={unWrap}>\r\n                    <path fillRule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                </svg>\r\n            )\r\n            break;\r\n        }\r\n        default: {\r\n            wrappedNavIcon = (\r\n                <svg style={wrappedNavIconStyle} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"nav-icon bi bi-image\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={unWrap}>\r\n                    <path fillRule=\"evenodd\" d=\"M14.002 2h-12a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12z\"/>\r\n                    <path d=\"M10.648 7.646a.5.5 0 0 1 .577-.093L15.002 9.5V14h-14v-2l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71z\"/>\r\n                    <path fillRule=\"evenodd\" d=\"M4.502 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Если компонент Nav свернут, то отображается иконка Nav, если нет, то полное меню Nav\r\n    // Полное меню Nav содержит NavLink для пермещения между категориями фотографий\r\n    // и кнопки с onClick={() => props.setGalleryColumns(Х)} для изменения отображаемого количества колонок с фотографиями\r\n    // ну и крестик для обратного свертывания компонента Nav\r\n    if (wrapped) {\r\n        return (wrappedNavIcon)\r\n    }\r\n    else{\r\n        return (\r\n            <div className='nav-panel'>\r\n                <nav>\r\n                    <ul className=\"w-100 nav nav-pills\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to='/gallery-app' exact>\r\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-image\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\" d=\"M14.002 2h-12a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12z\"/>\r\n                                    <path d=\"M10.648 7.646a.5.5 0 0 1 .577-.093L15.002 9.5V14h-14v-2l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M4.502 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                                </svg>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to='/gallery-app/favorites'>\r\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-heart-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n                                </svg>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to='/gallery-app/deleted'>\r\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                                </svg>\r\n                            </NavLink>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                </nav>\r\n                \r\n                <div className=\"btn-group ml-3 mr-3\" role=\"group\" aria-label=\"Basic example\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.setGalleryColumns(1)}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.setGalleryColumns(2)}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-grid\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.setGalleryColumns(3)}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-grid-3x3-gap\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M4 2H2v2h2V2zm1 12v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 10v-2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 2H7v2h2V2zm5 0h-2v2h2V2zM4 7H2v2h2V7zm5 0H7v2h2V7zm5 0h-2v2h2V7zM4 12H2v2h2v-2zm5 0H7v2h2v-2zm5 0h-2v2h2v-2zM12 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zm-1 6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-2z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={unWrap}>\r\n                    <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n                    <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNav.propTypes = {\r\n    setGalleryColumns: PropTypes.func,\r\n    tutorial: PropTypes.bool\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Picture(props) {\r\n\r\n    // В зависимости от свойства favorite фотографии будет отображаться соотвествующая иконка (заполенная или нет)\r\n    // нажатие на иконку меняет соответствующее ей своство у фотографии\r\n    let favoriteIco = props.picture.favorite ? \r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"picture__icon first bi bi-heart-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>props.addProperty(props.picture.id, 'favorite')}>\r\n            <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n        </svg>\r\n        )\r\n        :\r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"picture__icon first bi bi-heart\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>props.addProperty(props.picture.id, 'favorite')}>\r\n            <path fillRule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\r\n        </svg>\r\n        );\r\n    \r\n    // В зависимости от свойства deleted фотографии будет отображаться соотвествующая иконка (заполенная или нет)\r\n    // нажатие на иконку меняет соответствующее ей своство у фотографии\r\n    let deletedIco = props.picture.deleted ? \r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"picture__icon third bi bi-trash-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>props.addProperty(props.picture.id, 'deleted')}>\r\n            <path fillRule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n        </svg>\r\n        )\r\n        :\r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"picture__icon third bi bi-trash\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>props.addProperty(props.picture.id, 'deleted')}>\r\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n            <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n        </svg>\r\n        );\r\n    \r\n    // В зависимости от свойств favorite и deleted фотографии будет выбрано выделение данной фотографии (в виде цветного border)\r\n    let classes = props.picture.deleted ? \"picture border border-danger\" : props.picture.favorite ? \"picture border border-primary\" : \"picture\";\r\n    \r\n    // Для отображения действующих на фотографии фильтров используется переменная filters\r\n    // которая принимает свое значение в виде css свойства в зависимости от действующих на фотографии фильтров\r\n    let filters = {\r\n        filter: ''\r\n    };\r\n    if (props.picture.blur) {filters.filter+=' blur(1px)'}\r\n    if (props.picture.grayscale) {filters.filter+=' grayscale(1)'}\r\n    if (props.picture.sepia) {filters.filter+=' sepia(1)'}\r\n    if (props.picture.brightness) {filters.filter+=' brightness(1.5)'}\r\n    if (props.picture.contrast) {filters.filter+=' contrast(2)'}\r\n    if (props.picture.saturate) {filters.filter+=' saturate(2)'}\r\n    if (props.picture.hue) {filters.filter+=' hue-rotate(90deg)'}\r\n    if (props.picture.invert) {filters.filter+=' invert(1)'}\r\n\r\n    //Дополнительные сведения в виде автора фотографии и иконок favorite, fullscreen, deleted отображаются при наведении на picture мышкой\r\n    return(\r\n        <div className={classes}>\r\n            <span className=\"picture__name badge badge-primary\">{props.picture.author}</span>\r\n            {favoriteIco}\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"picture__icon second bi bi-fullscreen\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={props.showFullPicture}>\r\n                <path fillRule=\"evenodd\" d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\r\n            </svg>\r\n            {deletedIco}\r\n            <img style={filters} className=\"w-100\" src={props.picture.download_url} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nPicture.propTypes = {\r\n    picture: PropTypes.object.isRequired,\r\n    addProperty: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n}\r\n\r\nexport default Picture;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Pagination(props) {\r\n\r\n    // Массив pages для отображения номеров страниц в Pagination\r\n    let pages=[]\r\n    // Если страница первая, то номера страниц будут 1, 2, 3\r\n    if (props.page === 1) {pages = [1, 2, 3]}\r\n    // Если нет, то номера страниц высчитываются по простой формуле\r\n    else {pages = [props.page-1, props.page, props.page+1]}\r\n\r\n    // Нажатие на элементы page-link меняют состояние page родительского элемента MainScreen\r\n    return (\r\n        <nav className='bottom-pagination'>\r\n            <ul className=\"pagination m-0\">\r\n                <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={()=>props.changePage(pages[0])}>Previous</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={()=>props.changePage(pages[0])}>{pages[0]}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={()=>props.changePage(pages[1])}>{pages[1]}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={()=>props.changePage(pages[2])}>{pages[2]}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={()=>props.changePage(pages[2])}>Next</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport Picture from './picture'\r\nimport Pagination from './pagination'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// Для разбивания массива фотографий на колонки используется библиотека Masonry\r\n// Массив фотографий преобразуется в компоненты Picture\r\n// Компонент Pagination выполняет отображение текущей страницы и её смену\r\nfunction Gallery(props) {\r\n    return(\r\n        <React.Fragment>\r\n        <Masonry\r\n            breakpointCols={props.galleryColumns}\r\n            className=\"gallery\"\r\n            columnClassName=\"gallery__col\">\r\n                {\r\n                    props.pictures.map((item) => {return (\r\n                                                    <Picture \r\n                                                        key={item.id}\r\n                                                        picture={item}\r\n                                                        addProperty={props.addProperty}\r\n                                                        showFullPicture={() => props.showFullPicture(item.id)}\r\n                                                    />   \r\n                    )})\r\n                }\r\n        </Masonry>\r\n        <Pagination page={props.page} changePage={props.changePage} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nGallery.propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    galleryColumns: PropTypes.number.isRequired,\r\n    addProperty: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n    page: PropTypes.number.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport Picture from './picture'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// Для разбивания массива фотографий на колонки используется библиотека Masonry\r\n// Массив фотографий преобразуется в компоненты Picture\r\n// Если массив фотографий пуст, то выводится сообщение\r\nfunction GalleryFavorite(props) {\r\n\r\n    if (props.pictures.length === 0) {\r\n        return (\r\n            <div className=\"empty-favorite\">\r\n                <h1>У вас пока что нет ни одного избранного изображения</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        <Masonry\r\n            breakpointCols={props.galleryColumns}\r\n            className=\"gallery\"\r\n            columnClassName=\"gallery__col\">\r\n                {\r\n                    props.pictures.map((item) => {return (\r\n                                                    <Picture \r\n                                                        key={item.id}\r\n                                                        picture={item}\r\n                                                        addProperty={props.addProperty}\r\n                                                        showFullPicture={() => props.showFullPicture(item.id)}\r\n                                                    />\r\n                    )})\r\n                }\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nGalleryFavorite.propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    galleryColumns: PropTypes.number.isRequired,\r\n    addProperty: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n}\r\n\r\nexport default GalleryFavorite;","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport Picture from './picture'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// Для разбивания массива фотографий на колонки используется библиотека Masonry\r\n// Массив фотографий преобразуется в компоненты Picture\r\n// Если массив фотографий пуст, то выводится сообщение\r\nfunction GalleryDeleted(props) {\r\n    if (props.pictures.length === 0) {\r\n        return (\r\n            <div className=\"empty-favorite\">\r\n                <h1>У вас пока что нет ни одного удаленного изображения</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        <Masonry\r\n            breakpointCols={props.galleryColumns}\r\n            className=\"gallery\"\r\n            columnClassName=\"gallery__col\">\r\n                {\r\n                    props.pictures.map((item) => {return (\r\n                                                    <Picture \r\n                                                        key={item.id}\r\n                                                        picture={item}\r\n                                                        addProperty={props.addProperty}\r\n                                                        showFullPicture={() => props.showFullPicture(item.id)}\r\n                                                    />\r\n                    )})\r\n                }\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nGalleryDeleted.propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    galleryColumns: PropTypes.number.isRequired,\r\n    addProperty: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n}\r\n\r\nexport default GalleryDeleted;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// Для выбора необходимого фильтра нужно нажать соответствующую фильтру кнопку\r\n// Если фильтр активен, то кнопка подсвечивается\r\n// Для этого в Filters передается props.classes\r\nfunction Filters(props) {\r\n    return (\r\n        <div className=\"filters\">\r\n            <button type=\"button\" className=\"filters-btn btn btn-primary btn-lg\" onClick={props.openFilters}>Закрыть</button>\r\n            <button type=\"button\" className={props.classes.grayscale} onClick={()=>props.addProperty(props.id, 'grayscale')}>Grayscale</button>\r\n            <button type=\"button\" className={props.classes.sepia} onClick={()=>props.addProperty(props.id, 'sepia')}>Sepia</button>\r\n            <button type=\"button\" className={props.classes.blur} onClick={()=>props.addProperty(props.id, 'blur')}>Blur</button>\r\n            <button type=\"button\" className={props.classes.brightness} onClick={()=>props.addProperty(props.id, 'brightness')}>Brightness</button>\r\n            <button type=\"button\" className={props.classes.contrast} onClick={()=>props.addProperty(props.id, 'contrast')}>Contrast</button>\r\n            <button type=\"button\" className={props.classes.saturate} onClick={()=>props.addProperty(props.id, 'saturate')}>Saturate</button>\r\n            <button type=\"button\" className={props.classes.hue} onClick={()=>props.addProperty(props.id, 'hue')}>Hue-rotate</button>\r\n            <button type=\"button\" className={props.classes.invert} onClick={()=>props.addProperty(props.id, 'invert')}>Invert</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilters.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    classes: PropTypes.object,\r\n    addProperty: PropTypes.func,\r\n    openFilters: PropTypes.func,\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction PictureInfo(props) {\r\n\r\n    // В зависимости от свойства favorite фотографии будет отображаться соотвествующая иконка (заполенная или нет)\r\n    // нажатие на иконку меняет соответствующее ей своство у фотографии\r\n    let favoriteIco = props.picture.favorite ? \r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-heart-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={() =>props.addProperty(props.picture.id, 'favorite')}>\r\n            <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n        </svg>\r\n        )\r\n        :\r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-heart\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={() =>props.addProperty(props.picture.id, 'favorite')}>\r\n            <path fillRule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\r\n        </svg>\r\n        );\r\n    \r\n    // В зависимости от свойства deleted фотографии будет отображаться соотвествующая иконка (заполенная или нет)\r\n    // нажатие на иконку меняет соответствующее ей своство у фотографии\r\n    let deletedIco = props.picture.deleted ? \r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash-fill\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={() =>props.addProperty(props.picture.id, 'deleted')}>\r\n            <path fillRule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n        </svg>\r\n        )\r\n        :\r\n        (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={() =>props.addProperty(props.picture.id, 'deleted')}>\r\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n            <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n        </svg>\r\n        );\r\n\r\n    // Данный компонент необходим для отображения информации в компоненте Fullscreen\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"picture-text-grid\">\r\n            <span className=\"picture-text\">ID:</span>\r\n            <span className=\"picture-text\">{props.picture.id}</span>\r\n            <span className=\"picture-text\">Автор:</span>\r\n            <span className=\"picture-text\">{props.picture.author}</span>\r\n            <span className=\"picture-text\">Ширина:</span>\r\n            <span className=\"picture-text\">{props.picture.width + 'px'}</span>\r\n            <span className=\"picture-text\">Высота:</span>\r\n            <span className=\"picture-text\">{props.picture.height + 'px'}</span>\r\n            <a className=\"picture-href\" rel=\"noopener noreferrer\" target=\"_blank\" href={props.picture.download_url}>Ссылка на фото</a>\r\n        </div>\r\n        <div className=\"picture-buttons\">\r\n            {favoriteIco}\r\n            {deletedIco}\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-sliders\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={props.openFilters}>\r\n                <path fillRule=\"evenodd\" d=\"M14 3.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0zM11.5 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM7 8.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0zM4.5 10a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm9.5 3.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0zM11.5 15a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M9.5 4H0V3h9.5v1zM16 4h-2.5V3H16v1zM9.5 14H0v-1h9.5v1zm6.5 0h-2.5v-1H16v1zM6.5 9H16V8H6.5v1zM0 9h2.5V8H0v1z\"/>\r\n            </svg>\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-fullscreen-exit\" fill=\"#007bff\" xmlns=\"http://www.w3.org/2000/svg\" onClick={props.showFullPicture}>\r\n                <path fillRule=\"evenodd\" d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z\"/>\r\n            </svg>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nPictureInfo.propTypes = {\r\n    picture: PropTypes.object.isRequired,\r\n    addProperty: PropTypes.func,\r\n    openFilters: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n}\r\n\r\nexport default PictureInfo;","import React, { useState } from 'react';\r\nimport Filters from './filters'\r\nimport PictureInfo from './picture-info'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction FullscreenPicture(props) {\r\n    // Состояние, отображающее выбранное окно в FullscreenPicture (фильтры или информация)\r\n    let [filtersOpen, setFiltersOpen] = useState(false);\r\n\r\n    // Функция-обертка для отображения фильтров\r\n    function openFilters() {\r\n        setFiltersOpen(!filtersOpen);\r\n    }\r\n\r\n    // Для отображения действующих на фотографии фильтров используется переменная filters\r\n    // которая принимает свое значение в виде css свойства в зависимости от действующих на фотографии фильтров\r\n    let filters = {\r\n        filter: ''\r\n    };\r\n\r\n    // Для подсвечивания кнопок с активными фильтрами используется массив classes\r\n    // элементы которого принимают свое значение в виде классов в зависимости от действующих на фотографии фильтров\r\n    let classes = {\r\n        grayscale: \"filters-btn btn btn-primary btn-lg\",\r\n        sepia: \"filters-btn btn btn-primary btn-lg\",\r\n        blur: \"filters-btn btn btn-primary btn-lg\",\r\n        brightness: \"filters-btn btn btn-primary btn-lg\",\r\n        contrast: \"filters-btn btn btn-primary btn-lg\",\r\n        saturate: \"filters-btn btn btn-primary btn-lg\",\r\n        hue: \"filters-btn btn btn-primary btn-lg\",\r\n        invert: \"filters-btn btn btn-primary btn-lg\",\r\n    }\r\n\r\n    // Проверка активности фильтра и настройки filters и classes\r\n    if (props.picture.grayscale) {\r\n        filters.filter+=' grayscale(1)';\r\n        classes.grayscale = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.grayscale = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.sepia) {\r\n        filters.filter+=' sepia(1)';\r\n        classes.sepia = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.sepia = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.blur) {\r\n        filters.filter+=' blur(1px)';\r\n        classes.blur = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.blur = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.brightness) {\r\n        filters.filter+=' brightness(1.5)';\r\n        classes.brightness = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.brightness = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.contrast) {\r\n        filters.filter+=' contrast(2)';\r\n        classes.contrast = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.contrast = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.saturate) {\r\n        filters.filter+=' saturate(2)';\r\n        classes.saturate = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.saturate = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.hue) {\r\n        filters.filter+=' hue-rotate(90deg)';\r\n        classes.hue = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.hue = \"filters-btn btn btn-secondary btn-lg\"}\r\n    if (props.picture.invert) {\r\n        filters.filter+=' invert(1)';\r\n        classes.invert = \"filters-btn btn btn-primary btn-lg\"\r\n    } else {classes.invert = \"filters-btn btn btn-secondary btn-lg\"}\r\n\r\n\r\n    // В зависимости от состояния filtersOpen отображаются либо фильтры, \r\n    // либо информация о фотографии\r\n    let showingComponent;\r\n    showingComponent = filtersOpen ? \r\n    <Filters\r\n        id={props.picture.id}\r\n        classes={classes}\r\n        addProperty={props.addProperty}\r\n        openFilters={openFilters}\r\n    /> \r\n    : \r\n    <PictureInfo\r\n        picture={props.picture}\r\n        addProperty={props.addProperty}\r\n        openFilters={openFilters}\r\n        showFullPicture={()=>props.showFullPicture(false)}\r\n    />\r\n\r\n    return(\r\n        <div className=\"picture-banner\">\r\n            <div className=\"picture-placeholder\">\r\n                <img style={filters} className=\"picture-fullscreen\" src={props.picture.download_url} alt=\"\" />\r\n            </div>\r\n            <div className=\"picture-info\">\r\n                {showingComponent}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFullscreenPicture.propTypes = {\r\n    picture: PropTypes.object.isRequired,\r\n    addProperty: PropTypes.func,\r\n    showFullPicture: PropTypes.func,\r\n}\r\n\r\nexport default FullscreenPicture;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n//Компонент для первичного обучения пользователя, заключающееся в том, чтобы показать ему наличие компонента Nav\r\n// При нажатии на button обучение завершается и при повторном использовании Gallery-App показываться не будет\r\nfunction TutorialBanner(props) {\r\n    return (\r\n        <div className=\"tutorial-banner\">\r\n            <div className=\"tutorial-div\">\r\n                <span className=\"tutorial-span\">Используйте данную кнопку для перемещения между различными категориями фотографий и настройки количества колонок на странице</span>\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={()=>props.setTutorial(true)}>Понятно</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTutorialBanner.propTypes = {\r\n    setTutorial: PropTypes.func,\r\n}\r\n\r\nexport default TutorialBanner;","import React, {useEffect} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Nav from './nav';\r\nimport Gallery from './gallery';\r\nimport GalleryFavorite from './gallery-favorite';\r\nimport GalleryDeleted from './gallery-deleted';\r\nimport FullscreenPicture from './fullscreen-picture';\r\nimport Tutorial from './tutorial'\r\n\r\n//Для сохранения данных в веб-приложении используется localStorage\r\n//Для сохранения состояния фотографий (что они в избранном, удаленном, их фильтры)\r\nlet storedGalleryStart = [];\r\nif (localStorage.getItem('storedGallery')) {storedGalleryStart = JSON.parse(localStorage.getItem('storedGallery'))};\r\n//Для сохранения состояния первичного обучения\r\nlet startTutorial = false;\r\nif (localStorage.getItem('tutorial')) {startTutorial = true}\r\n//Для сохранения количества столбцов\r\nlet startColumns = 3;\r\nif (localStorage.getItem('columns')) {startColumns = Number(localStorage.getItem('columns'))}\r\n\r\nexport default function MainScreen() {\r\n    //Состояние, отображающее загруженные с сервера фотографии\r\n    let [pictures, setPictures] = React.useState([]);\r\n    //Состояние, отображающее сохраненные фотографии на локальном устройстве\r\n    let [storedGallery, setStoredGallery] = React.useState(storedGalleryStart);\r\n    //Состояние, отображающее количество столбцов\r\n    let [galleryColumns, setGalleryColumns] = React.useState(startColumns);\r\n    //Состояние, отображающее режим полноэкранного просмотра для фотографии\r\n    let [fullscreen, setFullscreen] = React.useState(false);\r\n    //Состояние, отображающее текущую страницу в Галерее\r\n    let [page, setPage] = React.useState(1);\r\n    //Состояние, отображающее статус первичного обучения\r\n    let [tutorial, setTutorial] = React.useState(startTutorial);\r\n\r\n    //Загрузка новых фотографий с сервера происходит при изменении состояния Page\r\n    useEffect(() => {\r\n        fetch(`https://picsum.photos/v2/list?page=${page}&limit=30`)\r\n            .then(response => response.json())\r\n            //Выполняется поиск среди сохраненных фотографий среди загруженных и, если такое фото нашлось в локальном хранилище,\r\n            //то его состояние передается в Pictures, если нет - то у загруженной фотографии будет начальное состояние \r\n            .then(pictures => setPictures(pictures.map((item) => {if (storedGallery.find(storedItem => item.id === storedItem.id)) \r\n                                                                    {return storedGallery.find(storedItem => item.id === storedItem.id)}  \r\n                                                                    else {return {...item, \r\n                                                                            favorite: false, \r\n                                                                            deleted: false, \r\n                                                                            blur: false, \r\n                                                                            grayscale: false, \r\n                                                                            sepia: false, \r\n                                                                            brightness: false, \r\n                                                                            contrast: false,\r\n                                                                            saturate: false,\r\n                                                                            hue: false,\r\n                                                                            invert: false\r\n            }}})))\r\n    }, [page]);\r\n\r\n    //Сохранение параметров, хранящихся локально, происходит при изменении данного параметра\r\n    useEffect(()=>localStorage.setItem('storedGallery', JSON.stringify(storedGallery)), [storedGallery]);\r\n    useEffect(()=>localStorage.setItem('tutorial', tutorial), [tutorial]);\r\n    useEffect(()=>localStorage.setItem('columns', galleryColumns), [galleryColumns]);\r\n\r\n    //Функция-обертка для смены страницы\r\n    function changePage(toPage) {\r\n        if (page !== toPage) { setPage(toPage) }\r\n    }\r\n\r\n    //Функция для изменения свойств фотографии, id - номер фотографии, prop - изменемое свойство\r\n    function addProperty(id, prop) {\r\n        //Если фотография отображается в текущей Галерее, то состояние этой фотографии в Галерее меняется\r\n        setPictures(pictures.map((item) => {if (item.id === id) {return {...item, [prop]: !item[prop]}} else {return item}}));\r\n        //Ищем, есть ли такая фотография в сохраненных, если нет - меняем свойство и добавляем, если есть - просто меняем свойство\r\n        if (!storedGallery.find(item => item.id === id)) {\r\n            let newItem = pictures.find(item => item.id === id);\r\n            newItem[prop] = !newItem[prop];\r\n            storedGallery.push(newItem);\r\n            setStoredGallery(storedGallery);\r\n        } else {\r\n            setStoredGallery(storedGallery.map(item => {if (item.id === id) {return {...item, [prop]: !item[prop]}} else {return item}}));\r\n        }\r\n    }\r\n  \r\n    //Функция для смены состояния Fullscreen и показа выбранной по id фотографии\r\n    //Для того, чтобы можно было отображать как загруженные, так и уже сохраненные фотографии, \r\n    //просто сохраняем отображаемую фотографию (если она не была до этого сохранена)\r\n    //и в качестве передаваемого props передаем элемент из сохраненного массива фотографий \r\n    function showFullPicture(id) {    \r\n        if (id) {\r\n            if (!storedGallery.find(item => item.id === id)) {\r\n                let newItem = pictures.find(item => item.id === id);\r\n                storedGallery.push(newItem);\r\n                setStoredGallery(storedGallery);\r\n            }\r\n        }\r\n        setFullscreen(id);\r\n    }\r\n\r\n    //Так как в Route Component нельзя передавать props создается компонент-обертка для Route-компонентов\r\n    function WrappedGallery() {\r\n        return (\r\n            <Gallery \r\n                pictures={pictures.filter((item) => (!item.deleted))}\r\n                galleryColumns={galleryColumns} \r\n                addProperty={addProperty}\r\n                showFullPicture={showFullPicture}\r\n                page={page}\r\n                changePage={changePage}\r\n            />\r\n        )\r\n    }\r\n\r\n    function WrappedGalleryFavorite() {\r\n        return (\r\n            <GalleryFavorite \r\n                pictures={storedGallery.filter((item) => ((item.favorite) && (!item.deleted)))}\r\n                galleryColumns={galleryColumns}\r\n                addProperty={addProperty}\r\n                showFullPicture={showFullPicture}\r\n            />\r\n        )\r\n    }\r\n\r\n    function WrappedGalleryDeleted() {\r\n        return (\r\n            <GalleryDeleted \r\n                pictures={storedGallery.filter((item) => (item.deleted))}\r\n                galleryColumns={galleryColumns}\r\n                addProperty={addProperty}\r\n                showFullPicture={showFullPicture}\r\n            />\r\n        )\r\n    }\r\n\r\n    //Tutorial и Fullscreen отображаются только при необходимости\r\n    return(\r\n        <BrowserRouter>\r\n            <div>\r\n                {!tutorial && <Tutorial setTutorial={setTutorial} />}\r\n                {fullscreen && <FullscreenPicture  \r\n                                    picture = {storedGallery.find(item => item.id === fullscreen)} \r\n                                    addProperty={addProperty}\r\n                                    showFullPicture={showFullPicture}\r\n                                />}\r\n                <Nav setGalleryColumns={setGalleryColumns} tutorial={tutorial} />\r\n                <Switch>\r\n                    <Route path={'/gallery-app'} exact component={WrappedGallery} />\r\n                    <Route path={'/gallery-app/favorites'} exact component={WrappedGalleryFavorite} />\r\n                    <Route path={'/gallery-app/deleted'} exact component={WrappedGalleryDeleted} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    ) \r\n}\r\n\r\n","import React from 'react';\nimport './css/style.scss';\nimport MainScreen from './components/main-screen';\n\nfunction App() {\n  return (\n    <MainScreen />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}